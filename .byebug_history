c
params.require(:user).permit(:name, :password, :password_confirmation, :email)
params
user_params.class
user_params
params
c
params.class
User.first.email
User.first.emsil
User.first.commit
User.first
params
c
params
_params
user_params
c
user_params
params
c
params
c
params
c
self
c
self
record
record.email
self.email
self
c
params[:page].to_i
params[:page]
params
param
param[:page]
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
cc
c
cc
c
request.path_parameters
c
request.path_parameters
request.pat_parameters
c
params[:page]
params
c
params
c
@line_items
c
(Float(User.find(session[:user_id]).line_items.size)/Float(5)).ceil
1.6.floor
1.6.ceil
Float(User.find(session[:user_id]).line_items.size)/Float(5).floor
Float(User.find(session[:user_id]).line_items.size)/Float(5)
Float(User.find(session[:user_id]).line_items.size)/Float(5).ceil
Float(User.find(session[:user_id]).line_items.size)/Float(5)
Float(User.find(session[:user_id]).line_items.size/5)
Float(User.find(session[:user_id]).line_items.size/5).to_f
(User.find(session[:user_id]).line_items.size/5).to_f
User.find(session[:user_id]).line_items.size
User.find(session[:user_id]).line_items
User.find(session[:user_id]).line_items.size
c
User.find(session[:user_id]).line_items[0]
User.find(session[:user_id]).line_items[0].LineItem_id 
User.find(session[:user_id]).line_items[0].LineItem 
User.find(session[:user_id]).line_items[0].LineItem id
User.find(session[:user_id]).line_items[0]
User.find(session[:user_id]).line_items
User.find(session[:user_id]).line_item
User.find(session[:user_id]).line_items[0].product_id
User.find(session[:user_id]).line_items[0]
c
User.find(session[:user_id]).line_items[0]
c
User.find(session[:user_id]).line_items[0]
User.find(session[:user_id]).line_items
c
User.find(session[:user_id]).orders[0]
User.find(session[:user_id]).orders.each do |a| p a.name end
User.find(session[:user_id]).orders.each do |a|
User.find(session[:user_id]).orders[0]
User.find(session[:user_id]).orders
c
Order.last
User.find(session[:user_id]).orders
User.find(session[:user_id]).line_items
User.find(session[:user_id])
c
@cart
c
@cart
c
@cart
c
Cart
cart
@cart
c
@cart.line_items_count
@cart
c
UserNotifier.send(:new)
c
n
c
n
UserNotifier.created
c
UserNotifier.created
UserNotifier.create
UserNotifier.created
c
self
c
OrderNotifier.created
@user.email
@user
self
mail to: self.email, subject: 'Pragmatic Store Order Confirmation'
mail to: order.email, subject: 'Pragmatic Store Order Confirmation'
self.email
 mail(to: self.email, subject: 'Sample Email')
c
self
@user
c
self.title.blank?
self.title
self.title.blank
self
slef
self.title
record
c
Product.find(params[:id])
:title
title
record
c
self
c
record.discount_price>0
record.price>0
record.price.methods.sort
record.price.sort
record.price.methods
record.price.value
record.price.inspect
price.inspect
record
record.price
:price
self.price
self
record
c
!!(value =~ /([^\/]*)([\w+]{3,})[.]([^.]+.[^.]{1,5})\Z/)
!!0
value =~ /([^\/]*)([\w+]{3,})[.]([^.]+.[^.]{1,5})\Z/
!!value =~ /([^\/]*)([\w+]{3,})[.]([^.]+.[^.]{1,5})\Z/
value.(/([^\/]*)([\w+]{3,})[.]([^.]+.[^.]{1,5})\Z/)
value.test(/([^\/]*)([\w+]{3,})[.]([^.]+.[^.]{1,5})\Z/)
value =~ /([^\/]*)([\w+]{3,})[.]([^.]+.[^.]{1,5})\Z/
value
attribute
record
report
value
c
continue
c
request
params
c
@line_item
c
@line_item
@line_items
c
cart_path(@cart)
<%= akshat %>
<%= button_to 'Empty cart', cart_path(@cart), method: :delete %>
data: { confirm: 'Are you sure?' }
button_to 'Empty cart', cart_path(@cart), method: :delete,
